// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgId.proto

#ifndef PROTOBUF_MsgId_2eproto__INCLUDED
#define PROTOBUF_MsgId_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace tetris_protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgId_2eproto();
void protobuf_AssignDesc_MsgId_2eproto();
void protobuf_ShutdownFile_MsgId_2eproto();


enum MsgId {
  C2S_Login = 100000,
  S2C_Login = 100001
};
bool MsgId_IsValid(int value);
const MsgId MsgId_MIN = C2S_Login;
const MsgId MsgId_MAX = S2C_Login;
const int MsgId_ARRAYSIZE = MsgId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgId_descriptor();
inline const ::std::string& MsgId_Name(MsgId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgId_descriptor(), value);
}
inline bool MsgId_Parse(
    const ::std::string& name, MsgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgId>(
    MsgId_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace tetris_protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< tetris_protocol::MsgId>() {
  return tetris_protocol::MsgId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgId_2eproto__INCLUDED
